"use strict";(self.webpackChunkwalletconnect_docs=self.webpackChunkwalletconnect_docs||[]).push([[547],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,c(c({ref:t},s),{},{components:n})):r.createElement(m,c({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,c=new Array(o);c[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:l,c[1]=a;for(var u=2;u<o;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1756:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=n(7462),l=n(3366),o=(n(7294),n(3905)),c=["components"],a={},i="Connect",u={unversionedId:"client-api/connect",id:"version-1.0/client-api/connect",title:"Connect",description:"To connect to the wallet and receive the wallet's Publickey, you must call the connect method.",source:"@site/versioned_docs/version-1.0/client-api/connect.md",sourceDirName:"client-api",slug:"/client-api/connect",permalink:"/WalletConnect-docs/client-api/connect",editUrl:"https://github.com/KuknosCo/WalletConnect-docs/versioned_docs/version-1.0/client-api/connect.md",tags:[],version:"1.0",frontMatter:{},sidebar:"version-1.0/mainSidebar",previous:{title:"Technical Specification",permalink:"/WalletConnect-docs/tech-spec"},next:{title:"Disconnect",permalink:"/WalletConnect-docs/client-api/disconnect"}},s={},p=[{value:"Example",id:"example",level:3},{value:"Return",id:"return",level:3}],d={toc:p};function f(e){var t=e.components,a=(0,l.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connect"},"Connect"),(0,o.kt)("p",null,"To connect to the wallet and receive the wallet's Publickey, you must call the connect method.\nThis method dose not receive any parameters is only for receiving the publickey and connecting to the wallet"),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"alt text",src:n(9384).Z,width:"300",height:"502"})),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"\n    try {\n        const response = await wallet.connect() \n        if(response.status === 'reject'){\n            throw new Error(response.message)\n        }\n        console.log(response.data.public)  // Public key of connected wallet\n    } catch (error) {\n        console.log(error)\n    }\n\n")),(0,o.kt)("h3",{id:"return"},"Return"),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Name"),(0,o.kt)("th",null,"Type"),(0,o.kt)("th",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"status"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,"type"),(0,o.kt)("td",null,"actionType.getAccount"),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,"message"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,"data"),(0,o.kt)("td",null,"GetAccountResponse"),(0,o.kt)("td",null,(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Name"),(0,o.kt)("th",null,"Type")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"public"),(0,o.kt)("td",null,"string")))))))}f.isMDXComponent=!0},9384:function(e,t,n){t.Z=n.p+"assets/images/connectModal-4c39dddd2565881a01b91d1c6468f456.png"}}]);