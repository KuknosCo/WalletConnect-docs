"use strict";(self.webpackChunkwalletconnect_docs=self.webpackChunkwalletconnect_docs||[]).push([[2404],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,c=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||c;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var c=n.length,o=new Array(c);o[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:l,o[1]=a;for(var u=2;u<c;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5763:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=n(7462),l=n(3366),c=(n(7294),n(3905)),o=["components"],a={},i="Connect",u={unversionedId:"client-api/connect",id:"client-api/connect",title:"Connect",description:"To connect to the wallet and receive the wallet's Publickey, you must call the connect method.",source:"@site/docs/client-api/connect.md",sourceDirName:"client-api",slug:"/client-api/connect",permalink:"/WalletConnect-docs/2.0.0/client-api/connect",editUrl:"https://github.com/KuknosCo/WalletConnect-docs/docs/client-api/connect.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Technical Specification",permalink:"/WalletConnect-docs/2.0.0/tech-spec"},next:{title:"Disconnect",permalink:"/WalletConnect-docs/2.0.0/client-api/disconnect"}},s={},p=[{value:"Example",id:"example",level:3},{value:"Return",id:"return",level:3}],d={toc:p};function f(e){var t=e.components,a=(0,l.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"connect"},"Connect"),(0,c.kt)("p",null,"To connect to the wallet and receive the wallet's Publickey, you must call the connect method.\nThis method dose not receive any parameters is only for receiving the publickey and connecting to the wallet"),(0,c.kt)("p",null,(0,c.kt)("img",{loading:"lazy",alt:"alt text",src:n(2353).Z,width:"300",height:"502"})),(0,c.kt)("h3",{id:"example"},"Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-javascript"},"\n    try {\n        const response = await wallet.connect() \n        if(response.status === 'reject'){\n            throw new Error(response.message)\n        }\n        console.log(response.data.public)  // Public key of connected wallet\n    } catch (error) {\n        console.log(error)\n    }\n\n")),(0,c.kt)("h3",{id:"return"},"Return"),(0,c.kt)("table",null,(0,c.kt)("tr",null,(0,c.kt)("th",null,"Name"),(0,c.kt)("th",null,"Type"),(0,c.kt)("th",null,"Description")),(0,c.kt)("tr",null,(0,c.kt)("td",null,"status"),(0,c.kt)("td",null,"boolean"),(0,c.kt)("td",null)),(0,c.kt)("tr",null,(0,c.kt)("td",null,"type"),(0,c.kt)("td",null,"actionType.getAccount"),(0,c.kt)("td",null)),(0,c.kt)("tr",null,(0,c.kt)("td",null,"message"),(0,c.kt)("td",null,"string"),(0,c.kt)("td",null)),(0,c.kt)("tr",null,(0,c.kt)("td",null,"data"),(0,c.kt)("td",null,"GetAccountResponse"),(0,c.kt)("td",null,(0,c.kt)("table",null,(0,c.kt)("tr",null,(0,c.kt)("th",null,"Name"),(0,c.kt)("th",null,"Type")),(0,c.kt)("tr",null,(0,c.kt)("td",null,"public"),(0,c.kt)("td",null,"string")))))))}f.isMDXComponent=!0},2353:function(e,t,n){t.Z=n.p+"assets/images/connectModal-4c39dddd2565881a01b91d1c6468f456.png"}}]);